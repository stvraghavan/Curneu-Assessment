# -*- coding: utf-8 -*-
"""Curneu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PfsQxn7UbCITg2i3-8EbYHmH79ss-G-p
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
import xlrd 
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler

dataset = pd.read_excel('/content/drive/MyDrive/fruits.xlsx') # Reading data from file

X = dataset.iloc[:,[2,3,4,5]]
Y = dataset.iloc[:,0]
# Defining variables for modelling

#sns.pairplot(X, kind="scatter")
#plt.show()
#X.corr()
# Checking for relations between variables

X = X.drop(labels = ['mass'],axis=1) # removing unnecessary variable

X_train, X_test, Y_train, Y_test= train_test_split(X, Y, test_size= 0.3, random_state=0)  # Creating a test and trainnig split for modelling

st_x= StandardScaler()    
X_train= st_x.fit_transform(X_train)    
X_test= st_x.transform(X_test)  
# Standardizing the data for suitable modelling

classifier= KNeighborsClassifier(n_neighbors=5, metric='minkowski', p=2 )  
classifier.fit(X_train, Y_train)
# Fitting model

y_pred= classifier.predict(X_test)

from sklearn.metrics import confusion_matrix
from sklearn import metrics
cm= confusion_matrix(Y_test, y_pred)
print("Accuracy of model at K=2 is",metrics.accuracy_score(Y_test, y_pred))
# First attempt at checking accuracy of the model using the data and random seed  formed by the splitter

for i in range(0,4):
  X_train, X_test, Y_train, Y_test= train_test_split(X, Y, test_size= 0.3, random_state=i)
  st_x= StandardScaler()
  X_train= st_x.fit_transform(X_train)
  X_test= st_x.transform(X_test)
  classifier= KNeighborsClassifier(n_neighbors=5, metric='minkowski', p=2 )
  classifier.fit(X_train, Y_train)
  y_pred= classifier.predict(X_test)
  cm= confusion_matrix(Y_test, y_pred)
  print("Accuracy of model at K=",i," is",metrics.accuracy_score(Y_test, y_pred))
  # Running various test cases for differnt values of the test and traing splitter so as to find differnt values as result and choosing the most suitable on for output